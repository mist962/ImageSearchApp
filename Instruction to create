1) Добавляем зависимости в Gradle

2) В MainActivity добавляем @AndroidEntryPoint

3) Создаем data class UnsplashPhoto в package - data
4) Создаем class UnsplashResponse содержащий List<UnsplashPhoto> в package - api
5) Создаем item_unsplash_photo.xml для UnsplashPhoto

6) Создаем Fragment GalleryFragment в package - ui.gallery c аннотацией @AndroidEntryPoint
7) Используем ViewBinding. Создаем переменую _binding и биндим ее к view
8) Заполняем fragment_gallery.xml необходимыми View - RecycerView, Button, ProgressBar, TextView

9) Создаем class ImageSearchApplication : Application() с аннотацией @HiltAndroidApp и прописываем в AndroidManifest

10) Создаем interface UnsplashApi в package - api

11) Создаем object AppModule в package - di c аннотацией @Module и @InstallIn(ApplicationComponent::class)
12) В AppModule создаем методыв provideRetrofit() и provideUnsplashApi() с аннотацией @Provides и @Singleton,
нам нужен Retrofit в едином экземляре на все приложение

13) Создаем class UnsplashRepository с аннтотациями @Inject и @Singleton, так же в конструкторе проводим UnsplashApi

14) Создаем class GalleryViewModel с аннотацией @ViewModelInject и в конструкторе проводим UnsplashRepository

15) Создаем class UnsplashPaggingSource (внутри класса есть инструкция)

16) Добавляем в UnsplashRepository метод getSearchResults()

17) Добавляем в GalleryViewModel companion object, переменные currentQuery, photos и функцию  searchPhotos()

18) Создаем переменную viewModel в GalleryFragment и Обсервим viewModel на photos

19) Создаем class UnsplashPhotoAdapter в package - ui.gallery (В классе все объясненно) ! МОЖЕТ БЫТЬ ОШИБКА
20) Инициализируем UnsplashPhotoAdapter в GalleryFragment
21) Привязываем RecyclerView
22) Передаем параеметры через viewModel.photos

----------------------Добавляем ProgressBar внизу сраницы и кнопку Retry при отсутствии интернета----------------------
23) Создаем layout -  unsplash_photo_load_state_footer
24) Создаем UnsplashPhotoLoadStateAdapter в package - ui.gallery (В классе все объяснено)
25) Добавляем .withLoadStateHeaderAndFooter() к адаптеру в GalleryFragment

----------------------Добавляем фунецию поиска----------------------
26) Создаем menu_gallery.xml в menu
27) Овверайдим метод onCreateOptionsMenu() в GalleryFragment
28) Добавляем adapter.addLoadStateListener{} в GalleryFragment
28) Добавляем buttonRetry.setOnClickListener{} в GalleryFragment

----------------------Добавляем Detail Screen----------------------
29) Создаем fragment_details.xml
30) Создаем DetailsFragment в package - ui.details
31) Добавляем Fragment в nav_graph
32) Добавляем в Arguments фрагмента UnsplashPhoto для SafeArgs
33) В UnsplashPhotoAdapter читаем инструкцию по привязке кликов к обекту
34) в GalleryFragment читаем инструкцию по кликам
35) Читаем инструкцию в DetailsFragment

36) В MainActivity добавляем navController

----------------------Сохраняем состояние после перезапуска----------------------
37) В ViewModel читаем инструкцию сохранение состояния


